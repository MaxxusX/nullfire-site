---
import type { ImageMetadata } from "astro";

interface Props {
	url: URL;
	sitename: string;
	pagename: string;
	desc: string;
	tags: string;
	favicon: ImageMetadata;
	embedImage?: ImageMetadata;
	embedImageAlt?: string;
	themeColor: string;
}

const { url, sitename, pagename, desc, tags, favicon, embedImage, embedImageAlt, themeColor } =
	Astro.props;
if (embedImage && !embedImageAlt) throw new Error("embedImage requires embedImageAlt");

const pagetitle = `${sitename} | ${pagename}`;

const ogImage = embedImage && new URL(embedImage.src, url).href;
const ogImageWidth = embedImage && embedImage.width.toString();
const ogImageHeight = embedImage && embedImage.height.toString();
const ogImageAlt = embedImage && embedImageAlt;
---

<head>
	<!-- Site Config -->
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<meta name="theme-color" content={themeColor ?? "#000"} />
	<meta name="referrer" content="no-referrer" />

	<!-- Preload -->
	<slot name="preload" />

	<!-- Titlebar Data -->
	<title>{pagetitle}</title>
	<link rel="icon" href={favicon.src} fetchpriority="low" referrerpolicy="no-referrer" />

	<!-- Common Metadata -->
	<link rel="canonical" href={url} />
	<meta name="description" content={desc} />
	<meta name="keywords" content={tags} />
	<meta name="robots" content="index,follow" />

	<!-- Apple Metadata -->
	<meta name="apple-mobile-web-app-title" content={sitename} />

	<!-- Twitter Metadata -->
	<meta name="twitter:card" content="summary" />
	<meta name="twitter:title" content={pagetitle} />
	<meta name="twitter:description" content={desc} />
	{
		ogImage && (
			<Fragment>
				<meta name="twitter:image" content={ogImage} />
				<meta name="twitter:image:alt" content={ogImageAlt} />
			</Fragment>
		)
	}

	<!-- OpenGraph Metadata -->
	<meta property="og:type" content="website" />
	<meta property="og:site_name" content={sitename} />
	<meta property="og:title" content={pagetitle} />
	<meta property="og:description" content={desc} />
	<meta property="og:url" content={url} />
	{
		ogImage && (
			<Fragment>
				<meta property="og:image" content={ogImage} />
				<meta property="og:image:alt" content={ogImageAlt} />
				<meta property="og:image:width" content={ogImageWidth} />
				<meta property="og:image:height" content={ogImageHeight} />
			</Fragment>
		)
	}

	<!-- Other Data -->
	<slot />
</head>
